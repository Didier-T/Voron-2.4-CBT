[gcode_macro M701]
gcode:
    status_busy
	LOAD_FILAMENT
    status_ready

[gcode_macro M702]
gcode:
    status_busy
	UNLOAD_FILAMENT
    status_ready

[gcode_macro M600]
gcode:
    status_busy
	CHANGE_FILAMENT
    status_ready

[gcode_macro M125]
gcode:
	PARK
    status_ready
  
[gcode_macro _CG28]
description: ne fait le home que s'il n'a pas déjà été effectué
gcode:
	{% if "xyz" not in printer.toolhead.homed_axes %}
        status_homing
		G28
        status_ready
	{% endif %}

[gcode_macro M109]
description: Attend que la température cible pour l'extrudeur soit atteinte sans attendre quelle soit stabilisé
rename_existing: M99109
gcode:
	#Parameters
	{% set s = params.S|float %}
	
	M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
	{% if s != 0 %}
        status_heating
		TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
        status_ready
	{% endif %}

[gcode_macro M190]
description: Attend que la température cible pour le plateau soit atteinte sans attendre quelle soit stabilisé
rename_existing: M99190
gcode:
	#Parameters
	{% set s = params.S|float %}

	M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
	{% if s != 0 %}
        status_heating
		TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
        status_ready
	{% endif %}

[gcode_macro G29]
gcode:
     status_leveling
	 BED_MESH_CLEAR
	 ADAPTIVE_BED_MESH FORCE_MESH=1
     status_ready

     
[gcode_macro M486]
description: exclusion d'objets
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #	   If the object with the given index has been canceled, this will cause
  #	   the firmware to skip to the next object. The value -1 is used to
  #	   indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #	   ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
	{action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
	EXCLUDE_OBJECT RESET=1

	{% for i in range(params.T | int) %}
	  EXCLUDE_OBJECT_DEFINE NAME={i}
	{% endfor %}
  {% endif %}

  {% if 'C' in params %}
	EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
	EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
	{% if params.S == '-1' %}
	  {% if printer.exclude_object.current_object %}
		EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
	  {% endif %}
	{% else %}
	  EXCLUDE_OBJECT_START NAME={params.S}
	{% endif %}
  {% endif %}

  {% if 'U' in params %}
	EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

